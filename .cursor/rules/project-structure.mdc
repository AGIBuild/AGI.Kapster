---
alwaysApply: true
description: AGI.Kapster project structure and navigation guide
---

# AGI.Kapster Project Structure

.NET 9 cross-platform screenshot and annotation tool built with Avalonia UI.

## Entry Points
- [Program.cs](mdc:src/AGI.Kapster.Desktop/Program.cs) - Application entry and DI setup
- [App.axaml.cs](mdc:src/AGI.Kapster.Desktop/App.axaml.cs) - Application lifecycle

## Architecture
- **Dependency Injection**: Microsoft.Extensions.DependencyInjection with extension methods
- **Cross-platform UI**: Avalonia UI 11.x
- **Graphics**: SkiaSharp for rendering
- **Logging**: Serilog with shared file access
- **Single Instance**: Named Mutex for cross-process enforcement

## Directory Structure
```
src/AGI.Kapster.Desktop/
├── Extensions/           # Service registration extension methods
├── Services/            # Core services grouped by functionality
│   ├── Settings/        # Singleton settings service with 3-tier config
│   ├── Hotkeys/         # Global hotkey management
│   ├── Overlay/         # Screenshot overlay controller
│   ├── Capture/         # Screen capture strategies
│   ├── Clipboard/       # Clipboard operations
│   ├── Startup/         # Platform-specific auto-start managers
│   └── Update/          # Auto-update service
├── Overlays/           # Overlay UI and event handling
├── Models/             # Data models and annotations
├── Rendering/          # Graphics rendering
├── Commands/           # Undo/redo command pattern
└── Views/              # Settings windows and dialogs
```

## Key Services
- [ISettingsService](mdc:src/AGI.Kapster.Desktop/Services/Settings/ISettingsService.cs) - Singleton settings with 3-tier loading
- [IStartupManager](mdc:src/AGI.Kapster.Desktop/Services/IStartupManager.cs) - Platform-specific auto-start
- [IOverlayController](mdc:src/AGI.Kapster.Desktop/Services/IOverlayController.cs) - Screenshot overlay management
- [IHotkeyManager](mdc:src/AGI.Kapster.Desktop/Services/Hotkeys/IHotkeyManager.cs) - Global hotkey registration
- [IExportService](mdc:src/AGI.Kapster.Desktop/Services/Export/IExportService.cs) - Image export

## Release Format
- Tag format: `v1.1.0` (semantic versioning with 'v' prefix)